import asyncio
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from src.keyboards.inline import get_cancel_keyboard
from src.prompts import PROFILE_ANALYSIS_PROMPT
from src.utils.ai_api import split_text, get_ai_response
from src.utils.states import AnalysisStates
from src.utils.telegram_helpers import safe_send_message  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç

router = Router()


@router.callback_query(F.data == "analyze_profile")
async def start_profile_analysis(callback: CallbackQuery, state: FSMContext):
    await state.set_state(AnalysisStates.waiting_for_profile)
    await callback.message.edit_text(
        "–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã. –Ø –∂–¥—É. ‚úçÔ∏è",
        reply_markup=get_cancel_keyboard()
    )
    await callback.answer()


@router.message(AnalysisStates.waiting_for_profile)
async def process_profile(message: Message, state: FSMContext):
    await state.clear()

    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    thinking_message = await message.answer("–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É... ‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –º–∏–Ω—É—Ç—ã.")

    user_profile_text = message.text
    prompt = PROFILE_ANALYSIS_PROMPT.format(user_profile=user_profile_text)

    # –ó–∞–ø—Ä–æ—Å –∫ API
    ai_response = await get_ai_response(prompt)

    # –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    await thinking_message.delete()

    if "–û—à–∏–±–∫–∞" in ai_response:
        await message.answer(
            f"üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n`{ai_response}`\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –≤–æ–∑–º–æ–∂–Ω–æ, API –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
        )
    else:
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —á–∞—Å—Ç–∏s
        chunks = split_text(ai_response)
        for i, chunk in enumerate(chunks):
            if i == len(chunks) - 1:  # –î–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥"
                await safe_send_message(message, chunk, reply_markup=get_cancel_keyboard())
            else:
                await safe_send_message(message, chunk)
            await asyncio.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏